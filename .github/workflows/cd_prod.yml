name: Continues Deployment (PROD)
on:
  # when there is a push  for prod branch execute the jobs.
  push:
    branches:
      - master
jobs:
  # [flutter_analyze] will first run flutter pub get and then flutter analyze
  # also [flutter_analyze] task will run after [branch_name_lint].
  flutter_analyze:
    runs-on: ubuntu-latest
    name: Run flutter analyze
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.9'
          channel: 'stable'
        name: Check flutter version.
        # check flutter version so pipeline will log this
      - run: flutter --version
      - uses: MathieuSoysal/replace-string-in-file@v1.0.0
        with:
          file: android/app/src/main/AndroidManifest.xml
          old-string: GOOGLE_API_KEY_CHANGE_HERE_TO_RUN_BUT_DO_NOT_PUSH
          new-string: "${{ secrets.API_KEY }}"
          # Copy Manifest file from secret.
#      - uses: DamianReeves/write-file-action@master
#        with:
#          path: android/app/src/main/AndroidManifest.xml
#          contents: |
#            ${{ secrets.ANDROID_MANIFEST }}
#          write-mode: overwrite
        # Copy Firebase Option from secret.
        name: Copy Firebase Option file
      - uses: DamianReeves/write-file-action@master
        with:
          path: lib/firebase_options.dart
          contents: |
            ${{ secrets.FIREBASE_OPTION }}
          write-mode: overwrite

        # Copy Google Service from secret.
        name: Copy Google Service file
      - uses: DamianReeves/write-file-action@master
        with:
          path: android/app/google-services.json
          contents: |
            ${{ secrets.GOOGLE_SERVICE_ANDROID }}
          write-mode: overwrite

        # Copy Ios Plist from secret.
        name: Copy Ios Plist file
      - uses: DamianReeves/write-file-action@master
        with:
          path: ios/Runner/GoogleService-Info.plist
          contents: |
            ${{ secrets.GOOGLE_SERVICE_IOS }}
          write-mode: overwrite
        name: Run flutter pub get
        # run flutter pub get to get all dependencies
      - run: flutter pub get
        name: Run flutter analyze
        # run flutter analyze to check if there is any analysis issues.
      - run: flutter analyze
  # [flutter_test] will first run all the flutter tests. both widget test
  # and flutter test.
  # also [flutter_test] task will run after [flutter_analyze].
  flutter_test:
    runs-on: ubuntu-latest
    name: Run flutter test
    needs: [flutter_analyze]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.9'
          channel: 'stable'
      - uses: MathieuSoysal/replace-string-in-file@v1.0.0
        with:
          file: android/app/src/main/AndroidManifest.xml
          old-string: GOOGLE_API_KEY_CHANGE_HERE_TO_RUN_BUT_DO_NOT_PUSH
          new-string: "${{ secrets.API_KEY }}"
#      # Copy Manifest file from secret.
#      - uses: DamianReeves/write-file-action@master
#        with:
#          path: android/app/src/main/AndroidManifest.xml
#          contents: |
#            ${{ secrets.ANDROID_MANIFEST }}
#          write-mode: overwrite
        # Copy Firebase Option from secret.
        name: Copy Firebase Option file
      - uses: DamianReeves/write-file-action@master
        with:
          path: lib/firebase_options.dart
          contents: |
            ${{ secrets.FIREBASE_OPTION }}
          write-mode: overwrite

        # Copy Google Service from secret.
        name: Copy Google Service file
      - uses: DamianReeves/write-file-action@master
        with:
          path: android/app/google-services.json
          contents: |
            ${{ secrets.GOOGLE_SERVICE_ANDROID }}
          write-mode: overwrite

        # Copy Ios Plist from secret.
        name: Copy Ios Plist file
      - uses: DamianReeves/write-file-action@master
        with:
          path: ios/Runner/GoogleService-Info.plist
          contents: |
            ${{ secrets.GOOGLE_SERVICE_IOS }}
          write-mode: overwrite
        name: Run flutter pub get
        # run flutter pub get to get all dependencies
      - run: flutter pub get
        name: Start running flutter test
        # start running flutter test
      - run: flutter test
  # [flutter_build_appbundle] will build flutter android app
  # Once android app is built it will be deployed to firebase prod test group
  # also [flutter_build_appbundle] task will run after [flutter_test].
  flutter_build_appbundle:
    runs-on: ubuntu-latest
    name: Build and Release Prod (Android)
    needs: [flutter_test]
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.9'
          channel: 'stable'
      - name: Get latest app version
        id: version
        # this is to get the recent firbase build version and number
        # then increment the version by 1 and build number by 1
        uses: MakeAndDevelop/firebase-appversion@v1
        with:
          appId: ${{secrets.APP_ID}}
          projectNumber: ${{secrets.FIREBASE_PROJECT_NUMBER}}
          serviceAccount: ${{secrets.CREDENTIAL_FILE_CONTENT}}
        # this is to update the yaml file so that when deployed in firebase it will
        # have new version and build number.
        # note: this build number will not be pushed to the  repo.
      - name: Update version in YAML
        run: |
          sed -i 's/version: [0-9]*\.[0-9]*\.[0-9]*+[0-9]*/version: ${{ steps.version.outputs.newFlutterVersionString }}/' pubspec.yaml
      - uses: MathieuSoysal/replace-string-in-file@v1.0.0
        with:
          file: android/app/src/main/AndroidManifest.xml
          old-string: GOOGLE_API_KEY_CHANGE_HERE_TO_RUN_BUT_DO_NOT_PUSH
          new-string: "${{ secrets.API_KEY }}"
        # Copy Manifest file from secret.
#      - uses: DamianReeves/write-file-action@master
#        with:
#          path: android/app/src/main/AndroidManifest.xml
#          contents: |
#            ${{ secrets.ANDROID_MANIFEST }}
#          write-mode: overwrite
        # Copy Firebase Option from secret.
        name: Copy Firebase Option file
      - uses: DamianReeves/write-file-action@master
        with:
          path: lib/firebase_options.dart
          contents: |
            ${{ secrets.FIREBASE_OPTION }}
          write-mode: overwrite

        # Copy Google Service from secret.
        name: Copy Google Service file
      - uses: DamianReeves/write-file-action@master
        with:
          path: android/app/google-services.json
          contents: |
            ${{ secrets.GOOGLE_SERVICE_ANDROID }}
          write-mode: overwrite

        # Copy Ios Plist from secret.
        name: Copy Ios Plist file
      - uses: DamianReeves/write-file-action@master
        with:
          path: ios/Runner/GoogleService-Info.plist
          contents: |
            ${{ secrets.GOOGLE_SERVICE_IOS }}
          write-mode: overwrite
        # run flutter pub get to get all dependencies
      - run: flutter pub get
        name: Run flutter clean
        # run flutter clean to start a fresh build
      - run: flutter clean
      - name: Build android apk
        # build a release android apk
        run: flutter build apk --release
      - name: List Android apk folder
        # list the flutter apk folder to so we can check the list
        # in console
        run: ls build/app/outputs/flutter-apk
        # This is to deploy the release apk to firebase.
      - uses: wzieba/Firebase-Distribution-Github-Action@v1
        name: upload artifact to Firebase App Distribution
        with:
          appId: ${{secrets.APP_ID}}
          serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
          groups: prod
          file: build/app/outputs/flutter-apk/app-release.apk